<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chart.repository.SaleDao">

	<select id="test" resultType="camelMap">
		SELECT 1 AS NO
			  ,'TEST' AS TEST_NM
		FROM DUAL
	</select>
	
	<select id="getSalesInfo" resultType="camelMap">
		SELECT
			  decode(gr, '00', cd_nm, '01', cd_nm || '합계', '총계') cd_nm 
			, region_area 
			, c00 || ' (' || round(c00*100 / tot, 2)|| '%)' || decode(c00, greatest(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▲')|| decode(c00, least(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▼')|| '*' || to_number(substr(nvl(rk0, max_rk), decode(gr, '00', 1, '01', 3, 5), 2)) c00 
			, c01 || ' (' || round(c01*100 / tot, 2)|| '%)' || decode(c01, greatest(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▲')|| decode(c01, least(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▼')|| '*' || to_number(substr(nvl(rk1, max_rk), decode(gr, '00', 1, '01', 3, 5), 2)) c01 
			, c02 || ' (' || round(c02*100 / tot, 2)|| '%)' || decode(c02, greatest(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▲')|| decode(c02, least(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▼')|| '*' || to_number(substr(nvl(rk2, max_rk), decode(gr, '00', 1, '01', 3, 5), 2)) c02 
			, c03 || ' (' || round(c03*100 / tot, 2)|| '%)' || decode(c03, greatest(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▲')|| decode(c03, least(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▼')|| '*' || to_number(substr(nvl(rk3, max_rk), decode(gr, '00', 1, '01', 3, 5), 2)) c03 
			, c04 || ' (' || round(c04*100 / tot, 2)|| '%)' || decode(c04, greatest(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▲')|| decode(c04, least(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▼')|| '*' || to_number(substr(nvl(rk4, max_rk), decode(gr, '00', 1, '01', 3, 5), 2)) c04 
			, c05 || ' (' || round(c05*100 / tot, 2)|| '%)' || decode(c05, greatest(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▲')|| decode(c05, least(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▼')|| '*' || to_number(substr(nvl(rk5, max_rk), decode(gr, '00', 1, '01', 3, 5), 2)) c05 
			, c06 || ' (' || round(c06*100 / tot, 2)|| '%)' || decode(c06, greatest(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▲')|| decode(c06, least(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▼')|| '*' || to_number(substr(nvl(rk6, max_rk), decode(gr, '00', 1, '01', 3, 5), 2)) c06 
			, c07 || ' (' || round(c07*100 / tot, 2)|| '%)' || decode(c07, greatest(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▲')|| decode(c07, least(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▼')|| '*' || to_number(substr(nvl(rk7, max_rk), decode(gr, '00', 1, '01', 3, 5), 2)) c07 
			, c08 || ' (' || round(c08*100 / tot, 2)|| '%)' || decode(c08, greatest(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▲')|| decode(c08, least(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▼')|| '*' || to_number(substr(nvl(rk8, max_rk), decode(gr, '00', 1, '01', 3, 5), 2)) c08 
			, c09 || ' (' || round(c09*100 / tot, 2)|| '%)' || decode(c09, greatest(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▲')|| decode(c09, least(c00, c01, c02, c03, c04, c05, c06, c07, c08, c09), '▼')|| '*' || to_number(substr(nvl(rk9, max_rk), decode(gr, '00', 1, '01', 3, 5), 2)) c09 
			, tot                                                                                                                                                                                                                                                                                            
			, gr
		FROM
			(
			SELECT
				area_cd 
				, region_area 
				, nvl(sum(decode(prod_id, '100000', sale_cnt)), 0) c00 
				, min(decode(prod_id, '100000', lpad(lrk, 2, '0')|| lpad(srk, 2, '0')|| lpad(trk, 2, '0'))) rk0 
				, nvl(sum(decode(prod_id, '100001', sale_cnt)), 0) c01 
				, min(decode(prod_id, '100001', lpad(lrk, 2, '0')|| lpad(srk, 2, '0')|| lpad(trk, 2, '0'))) rk1 
				, nvl(sum(decode(prod_id, '100002', sale_cnt)), 0) c02 
				, min(decode(prod_id, '100002', lpad(lrk, 2, '0')|| lpad(srk, 2, '0')|| lpad(trk, 2, '0'))) rk2 
				, nvl(sum(decode(prod_id, '100003', sale_cnt)), 0) c03 
				, min(decode(prod_id, '100003', lpad(lrk, 2, '0')|| lpad(srk, 2, '0')|| lpad(trk, 2, '0'))) rk3 
				, nvl(sum(decode(prod_id, '100004', sale_cnt)), 0) c04 
				, min(decode(prod_id, '100004', lpad(lrk, 2, '0')|| lpad(srk, 2, '0')|| lpad(trk, 2, '0'))) rk4 
				, nvl(sum(decode(prod_id, '100005', sale_cnt)), 0) c05 
				, min(decode(prod_id, '100005', lpad(lrk, 2, '0')|| lpad(srk, 2, '0')|| lpad(trk, 2, '0'))) rk5 
				, nvl(sum(decode(prod_id, '100006', sale_cnt)), 0) c06 
				, min(decode(prod_id, '100006', lpad(lrk, 2, '0')|| lpad(srk, 2, '0')|| lpad(trk, 2, '0'))) rk6 
				, nvl(sum(decode(prod_id, '100007', sale_cnt)), 0) c07 
				, min(decode(prod_id, '100007', lpad(lrk, 2, '0')|| lpad(srk, 2, '0')|| lpad(trk, 2, '0'))) rk7 
				, nvl(sum(decode(prod_id, '100008', sale_cnt)), 0) c08 
				, min(decode(prod_id, '100008', lpad(lrk, 2, '0')|| lpad(srk, 2, '0')|| lpad(trk, 2, '0'))) rk8 
				, nvl(sum(decode(prod_id, '100009', sale_cnt)), 0) c09 
				, min(decode(prod_id, '100009', lpad(lrk, 2, '0')|| lpad(srk, 2, '0')|| lpad(trk, 2, '0'))) rk9 
				, nvl(sum(sale_cnt), 0) tot 
				, max(lpad(lrk + 1, 2, '0')|| lpad(srk + 1, 2, '0')|| lpad(trk + 1, 2, '0')) max_rk 
				, GROUPING(area_cd)|| GROUPING(region_area) gr
			FROM
				(
				SELECT
					area_cd , region_area , prod_id , sale_cnt , DENSE_RANK() OVER(PARTITION BY area_cd, region_area ORDER BY sale_cnt DESC) lrk , DENSE_RANK() OVER(PARTITION BY area_cd ORDER BY s_t DESC) srk , DENSE_RANK() OVER(ORDER BY gt DESC) trk
				FROM
					(
					SELECT
						area_cd , region_area , prod_id , sale_cnt , sum(sale_cnt) OVER(PARTITION BY area_cd, prod_id) s_t , sum(sale_cnt) OVER(PARTITION BY prod_id) gt
					FROM
						(
						SELECT
							area_cd , region_area , prod_id , sum(sale_cnt) sale_cnt
						FROM
							sale_tbl
						WHERE
							rownum <![CDATA[<=]]> 5000000
		GROUP BY
		area_cd , region_area , prod_id
		ORDER BY
		prod_id, area_cd, region_area ) )
				ORDER BY
					1, 3)
			GROUP BY
				ROLLUP(area_cd,
				region_area)
			ORDER BY
				area_cd) ta,
			cd_tbl tb
		WHERE
			ta.area_cd = tb.cd_id(+)
			AND LENGTH(tb.cd_id(+))= 2
			AND gr = decode(gr, '00', '00', '01', '01', '11', '11', gr)
		ORDER BY
			decode(area_cd, '10',1, '20',2, '30',3, '40',4, '50',5, '60',6, '70',7, '80',8, '90',9, '95',10) ,
			decode('F', 'F', 1,-1)* to_number(gr)
	</select>
	
	<select id="getCode" resultType="camelMap">
		SELECT CT.CD_ID
			  ,CT.CD_NM
			  ,CT.CMT
		FROM CD_TBL CT
		WHERE LENGTH(CT.CD_ID) = #{length}
		<if test="length != 2">
		   OR CT.CMT IS NOT NULL
		</if>
		ORDER BY CT.CD_ID
	</select>

</mapper>